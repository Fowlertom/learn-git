Rebasing... 

Concept: re-writing history....

set the 'current' branch to the target, then re-write history for source to be 'compatable' with the target

1. rebase (aka re-write history) of target branch to incorperate the source branch
2. resolve conflicts (VS Code)
3. push the (local) target branch to server


*************************************************
Task: Merging Branches (after code development)
Who: CM's
Branches: merge from 'master' to 'develop'

1.
	- git checkout develop (aka target)
	- git rebase master

		or

	- git rebase master develop

2. resolve conflicts (VS Code)
3. save file
4. git add . (to add the file)
5. git rebase --continue

5.5 ensure you are on the 'develop' branch (by doing a git branch)
6. - git push -f



*************************************************
Task: Merge Developer Branch to 'Develop' branch
Who: Developers
Branches: merge from 'develop' branch (locally) to 'developer branch' (server) to branch

1.
	- git checkout 'developer branch'  (aka target)
	- git rebase develop

		or

	- git rebase develop 'developer branch' 

2. resolve conflicts (VS Code)

3. - git push -f 'developer branch'


Time ---------------------------------------->>>>>>>>>

cloud       bugfix    bugfix  -> develop                      ->  bugfix  -> develop  
              0         0           #                         |     # 0         #
                                                              |  
computer    bugfix                        develop -> bugfix ---
              0                              #         # 0 
			  
                               git rebase develop    bugfix